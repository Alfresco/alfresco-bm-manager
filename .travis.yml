# Auto-generated .travis.yml file
# Generated 2020-11-11 06:31:05 from Bamboo build plan BENCHMARK-BMMANAGER

language: java

jvm:
  - oraclejdk8

dist: xenial

addons:
  artifacts: true

stages:
  - name: Default Stage
  - name: Release
    if: fork = false AND (branch = master OR branch =~ /support\/.*/) AND type != pull_request AND commit_message !~ /\[no-release\]/

jobs:
  include:
    - stage: "Default Stage"
      name: "Build and Unit Test"
      script:
        # Clean up old images
        - |
          sh -c "$(cat <<'EOF'
          #!/bin/bash
          
          echo
          echo docker images
               docker images
          echo
          echo docker ps
               docker ps
          echo
          echo docker ps --all
               docker ps --all
          
          docker_images=$(docker images | grep 'alfresco-bm')
          docker_images_list=$(docker images | grep 'alfresco-bm'| awk '{print $3}' | uniq)
          echo "Docker images: $docker_images"
          
          if [ "$docker_images_list" == "" ]; then
              echo "No docker images on the agent"
          else
              echo "Clearing images: $docker_images_list"
              docker rmi -f $docker_images_list
          fi
          EOF
          )"
        # Extract version from pom file
        - export MAVEN_GROUPID=`echo '${project.groupId}' | mvn help:evaluate --non-recursive | grep -v "^\\["`
        - export MAVEN_ARTIFACTID=`echo '${project.groupId}' | mvn help:evaluate --non-recursive | grep -v "^\\["`
        - export MAVEN_VERSION=`echo '${project.groupId}' | mvn help:evaluate --non-recursive | grep -v "^\\["`
        # Create image tag name
        - |
          sh -c "$(cat <<'EOF'
          branch_name=${TRAVIS_BRANCH};
          build_profile='Pinternal'
          
          mkdir server/target
          touch server/target/bamboo-variables.properties;
          
          echo "The branch is $branch_name"
          echo "Project version: ${MAVEN_VERSION}"
          if [ $branch_name = "master" ]; 
          then
            tag_name='latest'
            build_profile='Pmaster'
          else
            # substitude all '/' to '-' as Docker doesn't allow it
            tag_name=`echo $branch_name | tr / - `;
            tag_name=$tag_name-${MAVEN_VERSION}
          fi
          
          echo "Saving tag name as $tag_name"
          echo "Saving fabric8 profile as $build_profile"
          
          # save variable in a text file
          echo "tag=$tag_name" > server/target/bamboo-variables.properties
          echo "profile=$build_profile" >> server/target/bamboo-variables.properties
          EOF
          )"
        # Inject image tag variable
        - cat "server/target/bamboo-variables.properties" | sed -e "s/^/export bamboo.inject./g" -e "s/\\./_/g" > "$TMPDIR/bamboo-inject.properties"
        - source "$TMPDIR/bamboo-inject.properties"
        # Build packaging and Unit Test
        - mvn clean install "-Dimage.tag=${INJECT_TAG}" -${INJECT_PROFILE}
      after_script:
        - artifacts upload target/README.txt
    # Stage: release artifact and image
    - stage: "Release"
      name: "Release"
      script:
        # Release Benchmark Manager
        - GIT_AUTHOR_NAME=alfresco-build GIT_AUTHOR_EMAIL=build@alfresco.com GIT_COMMITTER_NAME=alfresco-build GIT_COMMITTER_EMAIL=build@alfresco.com mvn --batch-mode  -DreleaseVersion=${RELEASE_VERSION}  -DdevelopmentVersion=${DEVELOPMENT_VERSION}  "-Darguments=-DskipTests" -Prelease release:prepare release:perform
      after_script:
        - artifacts upload target/README.txt
