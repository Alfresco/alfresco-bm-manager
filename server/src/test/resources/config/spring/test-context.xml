<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

 
    <!--
        A context for basic testing of the TestRun class
     -->
         
    <!-- Import any application contexts for test runs -->
    <import resource="classpath:config/spring/test-common-context.xml" />

    <!--                 -->
    <!-- EventProcessors -->
    <!--                 -->
    <!--
        The event processors will handle events based on their bean names after removal of the 'event.' prefix.
        So, for example:
            bean "event.start" will handle events named "start"
            bean "event.invite" will handle events named "invite"
        This behaviour can be overridden.  See the javadocs of AbstractEventProcessor.
    -->
    
    <bean id="event.start" class="org.alfresco.bm.driver.event.RaiseEventsEventProcessor" parent="event.base" >
        <constructor-arg name="outputEventName" value="randomSample" />
        <constructor-arg name="timeBetweenEvents" value="5" />
        <constructor-arg name="outputEventCount" value="20" />
        <property name="eventNames">
            <list>
                <value>start</value>
                <value>raiseMore</value>
            </list>
        </property>
        <property name="eventNameRaiseEvents" value="raiseMore" />
        <property name="chart" value="false" />
    </bean>
    
    <bean id="event.randomSample" class="org.alfresco.bm.driver.event.DelayingSampleEventProcessor" parent="event.base" >
        <constructor-arg name="outputEventName" value="randomSampleDone" />
        <constructor-arg name="minTime" value="50" />
        <constructor-arg name="maxTime" value="100" />
        <constructor-arg name="failurePercent" value="0" />
        <property name="chart" value="true" />
    </bean>
    
    <bean id="producer.randomSampleDone" class="org.alfresco.bm.driver.event.producer.TerminateEventProducer" parent="producer.base" />
    
    <!-- NB: We replace the MongoDB factory with in-memory versions here -->
    <!--     Test will not do this step normally but the unit testing code for the benchmark-server project requires it -->
    
    <bean id="testMongoFactory" class="org.alfresco.bm.common.util.junit.tools.MongoDBForTestsFactory" />
    
</beans>